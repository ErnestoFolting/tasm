STSEG SEGMENT PARA STACK "STACK"
DB 64 DUP("STACK")
STSEG ENDS

DSEG SEGMENT PARA PUBLIC "DATA"
STARTMESSAGE DB 'HI, INPUT SQUARE ARRAY SIZE FROM 1 T0 10 $'
ERRORMESSAGE DB 'OOOPS, WRONG DATA, ONLY FROM -32768 to 32767$'
MASMESSAGE DB 'YOUR START ARRAY: $'
INPUTMASMESSAGE DB 'INPUT YOUR ELEMENTS WITH PRESSING ENTER, BY DEFAULT 0: $'
SIZEERRORMESSAGE DB 'INCORRECT SIZE OF ARRAY $' 
NEWROWMESSAGE DB 'INPUT THE ELEMENTS OF NEW ROW: $' 
FINDNUMBERMESSAGE DB'INPUT THE NUMBER TO FIND: $' 
ERRORFINDNUMBERINPUT DB 'INCORRECT NUMBER TO FIND $'
ERRORELEMENTNOTFOUND DB 'ELEMENT WAS NOT FOUND $'
IJMESSAGE DB 'I, J: $'

NUMBERSTR DB 7,?,7 DUP(0AH)

MAS DW 100 DUP(0)

NUMBER DW 0
TEMPCX DW 0 
EXTERNALCX DW 0 
TEMPSI DW 0
COLUMNS DW 0
NUMBERELEMENTS DW 0
NUMBERTOFIND DW 0
ELEMENTFOUND DW 0
I DW 0
J DW 0 


INPUTOVERFLOW DW 0

NUMBERTOPRINT DW 0

CONVERTATIONCORRECT DW 1


MINNUM EQU -32768
TOCOMP EQU 0

DSEG ENDS

CSEG SEGMENT PARA PUBLIC "CODE"
.386

ASSUME CS:CSEG, DS:DSEG, SS:STSEG

MAIN PROC FAR

PUSH DS
XOR AX,AX 
PUSH AX
;INITIALIZATION OF DS
MOV AX,DSEG
MOV DS,AX

LEA DX, STARTMESSAGE
MOV AH,9H
INT 21H

;INPUT SIZE
MOV AH, 0AH
LEA DX, NUMBERSTR
INT 21H
CALL PRINTNEWLINE 

CALL CONVERTATION
CMP CONVERTATIONCORRECT, 1
JNE INCORRECTSIZE
CMP NUMBER, 0 
JLE INCORRECTSIZE
MOV AX, NUMBER
MOV BX, NUMBER
MUL BX 
JO INCORRECTSIZE
MOV BX, 100
CMP EBX, EAX 
JL INCORRECTSIZE
MOV NUMBERELEMENTS, AX
MOV AX, NUMBER
MOV COLUMNS, AX
CALL INPUTMAS
CMP INPUTOVERFLOW, 1 
JE INCORRECT
LEA DX, MASMESSAGE
MOV AH,9H
INT 21H
CALL PRINTNEWLINE
MOV SI, 0
CALL PRINTMAS
LEA DX, FINDNUMBERMESSAGE
MOV AH,9H
INT 21H
MOV AH, 0AH
LEA DX, NUMBERSTR
INT 21H
CALL PRINTNEWLINE 
CALL CONVERTATION
CMP CONVERTATIONCORRECT, 1
JNE INCORRECTFINDNUMBER
MOV AX, NUMBER
MOV NUMBERTOFIND, AX 
CALL FINDNUMBER
CMP ELEMENTFOUND, 1
JE FOUND 
LEA DX, ERRORELEMENTNOTFOUND
MOV AH,9H
INT 21H
FOUND:
RET
INCORRECTFINDNUMBER:
CALL PRINTNEWLINE 
LEA DX, ERRORFINDNUMBERINPUT
MOV AH,9H
INT 21H
RET
INCORRECTSIZE:
CALL PRINTNEWLINE 
LEA DX, SIZEERRORMESSAGE
MOV AH,9H
INT 21H
RET
INCORRECT:
RET
MAIN ENDP


FINDNUMBER PROC NEAR
MOV CX, COLUMNS 
MOV SI, 0
EXTERNALFIND:
MOV EXTERNALCX, CX 
MOV CX, COLUMNS
FIND:
MOV TEMPCX, CX
MOV DX, MAS[SI]
CMP DX, NUMBERTOFIND
JNE NOTEQUAL
MOV ELEMENTFOUND, 1
LEA DX, IJMESSAGE
MOV AH,9H
INT 21H
MOV AX, COLUMNS
SUB AX, EXTERNALCX
MOV NUMBERTOPRINT, AX 
CALL PRINTNUMBER 
MOV AL, ' '
INT 29H 
MOV AX, COLUMNS
SUB AX, TEMPCX
MOV NUMBERTOPRINT, AX 
CALL PRINTNUMBER 
CALL PRINTNEWLINE
NOTEQUAL:
ADD SI, 2
MOV CX, TEMPCX
LOOP FIND
MOV CX, EXTERNALCX
LOOP EXTERNALFIND 
RET 
FINDNUMBER ENDP 



INPUTMAS PROC NEAR
LEA DX, INPUTMASMESSAGE
MOV AH, 9H
INT 21H 
CALL PRINTNEWLINE 
MOV CX, COLUMNS 
MOV SI, 0
EXTERNALINPUT:
MOV EXTERNALCX, CX 
MOV CX, COLUMNS
INPUTEL:
MOV TEMPCX, CX
MOV AH, 0AH
LEA DX, NUMBERSTR
INT 21H
MOV TEMPSI, SI 
CALL PRINTNEWLINE 
CALL CONVERTATION
MOV SI, TEMPSI
CMP CONVERTATIONCORRECT, 1
JNE INCORRECTINPUT
MOV AX, NUMBER
MOV MAS[SI], AX 
MOV CX, TEMPCX
ADD SI, 2
LOOP INPUTEL
MOV CX, EXTERNALCX
CMP CX, 1
JE LAST
LEA DX, NEWROWMESSAGE
MOV AH,9H
INT 21H
CALL PRINTNEWLINE
LAST:
LOOP EXTERNALINPUT 
RET
INCORRECTINPUT:
MOV INPUTOVERFLOW, 1 
RET
INPUTMAS ENDP 




PRINTMAS PROC NEAR
MOV CX, COLUMNS 

EXTERNALPRINT:
MOV EXTERNALCX, CX 
MOV CX, COLUMNS
PRINTEL:
MOV TEMPCX, CX
MOV DX, MAS[SI]
MOV NUMBERTOPRINT, DX
CALL PRINTNUMBER
MOV AL, ' '
INT 29H 
ADD SI, 2
MOV CX, TEMPCX
LOOP PRINTEL
CALL PRINTNEWLINE
MOV CX, EXTERNALCX
LOOP EXTERNALPRINT 
RET 
PRINTMAS ENDP


PRINTNEWLINE PROC NEAR
MOV AL, 0AH
INT 29H
MOV AL, 13
INT 29H
RET
PRINTNEWLINE ENDP

PRINTERROR PROC NEAR
LEA DX, ERRORMESSAGE
MOV AH, 9H
INT 21H 
CALL PRINTNEWLINE 
RET 
PRINTERROR ENDP 

CONVERTATION PROC NEAR
;CONVERT TO NUMBER
LEA SI, NUMBERSTR +2
CMP BYTE PTR [SI], "-"
JNE A1
INC SI

A1:
XOR AX,AX
MOV BX,10 

A2:
MOV CL, [SI]
CMP CL, 0DH
JZ NEGATIVE

CMP CL,'0'
JB ERROR
CMP CL, '9'
JA ERROR

SUB CL, '0'
IMUL BX
JO ERROR
ADD AX, CX
JO MIN
INC SI 
JMP A2
ERROR:
CALL PRINTERROR 
MOV CONVERTATIONCORRECT, 0
RET 
MIN:
CMP AX, MINNUM
JNE ERROR 
CMP BYTE PTR [NUMBERSTR + 2], "-"
JNE ERROR 
NEGATIVE:
CMP BYTE PTR [NUMBERSTR + 2], "-"
JNE A3
NEG AX
A3:
MOV NUMBER,AX 
RET 
CONVERTATION ENDP




PRINTNUMBER PROC NEAR
MOV BX, NUMBERTOPRINT
OR BX,BX 
JNS M1
MOV AL, '-'
INT 29H
NEG BX

M1:
MOV AX,BX 
XOR CX, CX 
MOV BX, 10

M2:
XOR DX,DX
DIV BX 
ADD DL, '0'
PUSH DX
INC CX 
TEST AX,AX 
JNZ M2 

M3:
POP AX 
INT 29H
LOOP M3 
RET 
PRINTNUMBER ENDP


CSEG ENDS
END MAIN